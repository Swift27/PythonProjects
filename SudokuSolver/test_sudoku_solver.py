from sudoku_solver import find_next_empty, is_valid, solve_sudoku

def test_find_next_empty():
    test_board_1 = [
        [ 3, 9,-1,    -1, 5,-1,    -1,-1,-1],
        [-1,-1,-1,     2,-1,-1,    -1,-1, 5],
        [-1,-1,-1,     7, 1, 9,    -1, 8,-1],

        [-1, 5,-1,    -1, 6, 8,    -1,-1,-1],
        [ 2,-1, 6,    -1,-1, 3,    -1,-1,-1],
        [-1,-1,-1,    -1,-1,-1,    -1,-1, 4],

        [ 5,-1,-1,    -1,-1,-1,    -1,-1,-1],
        [ 6, 7,-1,     1,-1, 5,    -1, 4,-1],
        [ 1,-1, 9,    -1,-1,-1,     2,-1,-1],
    ]
    test_board_2 = [
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],

        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],

        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
        [ 3, 9, 2,     1, 5, 4,     7, 6, 8],
    ]

    assert(find_next_empty(test_board_1)) == (0, 2)
    assert(find_next_empty(test_board_2)) == (None, None)

def test_is_valid():
    test_board = [
        [ 3, 9,-1,    -1, 5,-1,    -1,-1,-1],
        [-1,-1,-1,     2,-1,-1,    -1,-1, 5],
        [-1,-1,-1,     7, 1, 9,    -1, 8,-1],

        [-1, 5,-1,    -1, 6, 8,    -1,-1,-1],
        [ 2,-1, 6,    -1,-1, 3,    -1,-1,-1],
        [-1,-1,-1,    -1,-1,-1,    -1,-1, 4],

        [ 5,-1,-1,    -1,-1,-1,    -1,-1,-1],
        [ 6, 7,-1,     1,-1, 5,    -1, 4,-1],
        [ 1,-1, 9,    -1,-1,-1,     2,-1,-1],
    ]

    assert(is_valid(test_board, 2, 0, 2)) == True
    assert(is_valid(test_board, 3, 0, 2)) == False
    assert(is_valid(test_board, 3, 1, 0)) == False
    assert(is_valid(test_board, 3, 1, 2)) == False

def test_solve_sudoku():
    test_board_unsolved = [
        [ 3, 9,-1,    -1, 5,-1,    -1,-1,-1],
        [-1,-1,-1,     2,-1,-1,    -1,-1, 5],
        [-1,-1,-1,     7, 1, 9,    -1, 8,-1],

        [-1, 5,-1,    -1, 6, 8,    -1,-1,-1],
        [ 2,-1, 6,    -1,-1, 3,    -1,-1,-1],
        [-1,-1,-1,    -1,-1,-1,    -1,-1, 4],

        [ 5,-1,-1,    -1,-1,-1,    -1,-1,-1],
        [ 6, 7,-1,     1,-1, 5,    -1, 4,-1],
        [ 1,-1, 9,    -1,-1,-1,     2,-1,-1],
    ]
    test_board_solved = [
        [ 3, 9, 1,     8, 5, 6,     4, 2, 7],
        [ 8, 6, 7,     2, 3, 4,     9, 1, 5],
        [ 4, 2, 5,     7, 1, 9,     6, 8, 3],

        [ 7, 5, 4,     9, 6, 8,     1, 3, 2],
        [ 2, 1, 6,     4, 7, 3,     5, 9, 8],
        [ 9, 3, 8,     5, 2, 1,     7, 6, 4],

        [ 5, 4, 3,     6, 9, 2,     8, 7, 1],
        [ 6, 7, 2,     1, 8, 5,     3, 4, 9],
        [ 1, 8, 9,     3, 4, 7,     2, 5, 6],
    ]

    solve_sudoku(test_board_unsolved)
    assert test_board_unsolved == test_board_solved
